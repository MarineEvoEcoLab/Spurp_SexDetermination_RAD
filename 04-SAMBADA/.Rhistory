#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC1, PC4, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC3, PC4, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC2, PC4, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC1, PC5, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC1, PC6, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC1, PC2, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "D:/Puritz_Lab/Spurp_SexDetermination_RAD/04-PCA")
knitr::opts_chunk$set(fig.path = "D:/Puritz_Lab/Spurp_SexDetermination_RAD/04-PCA/PLOTS/")
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(ggpubr)
#load eigenvectors/values
pca <- read.delim("Spurp.eigenvec", header = FALSE, sep = " ")
eigenval <- scan("Spurp.eigenval")
#remove the first column since it's repeated twice
pca <- pca[,-1]
#name the first column indv
names(pca)[1] <- "ind"
#name 2nd to number of columns in pca as PC 1 to 20
names(pca)[2:ncol(pca)] <- paste0("PC",1:(ncol(pca)-1))
meta <- read.delim("../meta/Sp_Radseq_Files_Guide.txt") %>% select(Urchin, Sex)
df <- left_join(pca,meta,by=c("ind"="Urchin"))
pve <- data.frame(PC = 1:20, pve = eigenval/sum(eigenval)*100)
a <- ggplot(pve, aes(PC, pve)) + geom_bar(stat = "identity")
a + ylab("Percentage variance explained") + theme_classic()
library(ggsci)
library(viridis)
ggplot(df, aes(PC1, PC2, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
#ggsave("LG.snps1.FFP5.MAF.01.HWE.01.MISS.65.MD.69.PCA.png",last_plot(),device="png")
ggplot(df, aes(PC1, PC3, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC1, PC2, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
setwd("../04-SAMBADA/")
# Read result file for univariate models
## Insert correct name here
res.1=read.table("Spurp-Out-1.geno", T, " ", stringsAsFactors=F)
res.1
# Read the result file for the null models
## Insert correct name here
res.0=read.table("Spurp-Out-0.geno", T, " ", stringsAsFactors=F)
res.0
# Drop the last column in both files since they are null
res.1=res.1[,1:15]
res.0=res.0[,1:5]
# Remove unconverted models (i.e. models with an error)
res.1=res.1[res.1$NumError == 0,]
res.1
# Check number of monomorphic markers
table(res.0$NumError)
# Keep the number of polymorphic markers as reference
numMark=table(res.0$NumError)[[1]]
numMark
# Number of environmental variables
## Insert correct number here
numEnv=1
# Score threshold for model significance (same value for G and Wald)
# Models with a score higher than this value are considered as significant.
# When using the option "SIGNIF" or "BEST", Sambada enforce this threshold for both G and Wald scores. One can also use a single test (G or Wald) for assessing significance.
# Note: The number of degree of freedom (df) is 1 since we compare models involving one env var with models without any env var
score.threshold=qchisq(alpha/(numEnv*numMark), 1, lower.tail=F)
# Choice of alpha (could be 0.05)
alpha=0.01
# Score threshold for model significance (same value for G and Wald)
# Models with a score higher than this value are considered as significant.
# When using the option "SIGNIF" or "BEST", Sambada enforce this threshold for both G and Wald scores. One can also use a single test (G or Wald) for assessing significance.
# Note: The number of degree of freedom (df) is 1 since we compare models involving one env var with models without any env var
score.threshold=qchisq(alpha/(numEnv*numMark), 1, lower.tail=F)
score.threshold
# Score threshold for model significance (same value for G and Wald)
# Models with a p-value lower than this value are considered as significant.
# When using the option "SIGNIF" or "BEST", Sambada enforce this threshold for both G and Wald p-values. One can also use a single test (G or Wald) for assessing significance.
pVal.threshold=alpha/(numEnv*numMark)
pVal.threshold
# Computing p-values:
res.1=cbind(res.1, pvalG=pchisq(res.1$Gscore, 1, lower.tail=F), pvalWald=pchisq(res.1$WaldScore, 1, lower.tail=F))
res.1
# Selecting models passing the G test (p-value for G score lower than the threshold)
res.1[res.1$pvalG<pVal.threshold,]
res.1 %>% filter(pvalWald < .001)
res.1 %>% filter(pvalWald < .01)
hist(res.1$pvalWald)
hist(res.1$pvalG)
res.1 %>% filter(pvalG < .001)
View(res.1 %>% filter(pvalG < .001))
plot(res.1$pvalG)
plot(res.1$pvalWald
)
plot(res.1$pvalG)
View(res.1)
View(res.1 %>% arrange(pvalG))
pVal.threshold
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "D:/Puritz_Lab/Spurp_SexDetermination_RAD/04-PCA")
knitr::opts_chunk$set(fig.path = "D:/Puritz_Lab/Spurp_SexDetermination_RAD/04-PCA/PLOTS/")
library(tidyverse)
library(ggplot2)
library(dbplyr)
library(ggpubr)
#load eigenvectors/values
pca <- read.delim("Spurp.eigenvec", header = FALSE, sep = " ")
eigenval <- scan("Spurp.eigenval")
#remove the first column since it's repeated twice
pca <- pca[,-1]
#name the first column indv
names(pca)[1] <- "ind"
#name 2nd to number of columns in pca as PC 1 to 20
names(pca)[2:ncol(pca)] <- paste0("PC",1:(ncol(pca)-1))
meta <- read.delim("../meta/Sp_Radseq_Files_Guide.txt") %>% select(Urchin, Sex)
df <- left_join(pca,meta,by=c("ind"="Urchin"))
pve <- data.frame(PC = 1:20, pve = eigenval/sum(eigenval)*100)
a <- ggplot(pve, aes(PC, pve)) + geom_bar(stat = "identity")
a + ylab("Percentage variance explained") + theme_classic()
library(ggsci)
library(viridis)
ggplot(df, aes(PC1, PC2, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
#ggsave("LG.snps1.FFP5.MAF.01.HWE.01.MISS.65.MD.69.PCA.png",last_plot(),device="png")
ggplot(df, aes(PC1, PC3, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC2, PC3, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC3, PC4, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC2, PC3, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC1, PC3, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC2, PC3, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC2, PC1, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
ggplot(df, aes(PC1, PC2, color=Sex)) + geom_point(size = 3, alpha = .875) +
coord_equal() +
xlab(paste0("PC1 (", signif(pve$pve[1], 3), "%)")) + ylab(paste0("PC2 (", signif(pve$pve[2], 3), "%)")) +
labs(colour = "") + #stat_ellipse(aes(group = reg)) +
#annotate("text", x = -0.05, y = .0045, label = paste0("PC1 (", signif(pve$pve[1], 3), "%)"),size=4.95) +
#annotate("text", x = -.0045, y = -.045, label = paste0("PC2 (", signif(pve$pve[2], 3), "%)"), angle = 90,size=4.95) +
#scale_color_igv(breaks = c("up","down","lower")) +
geom_hline(yintercept=0, linetype="longdash") + geom_vline(xintercept=0, linetype="dotdash") +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
legend.key = element_rect(fill = "white", colour = "black"),
legend.position = c(.7,.9)
) +
guides(fill = guide_legend(override.aes = list(linetype = 0)),
color = guide_legend(override.aes = list(linetype = 0)))
res.1-a <- res.1 %>% arrange(pvalG))
res.1-a <- res.1 %>% arrange(pvalG)
res.1.a <- res.1 %>% arrange(pvalG)
head(res.1)
hist(Gscore)
hist(res.1$Gscore)
hist(res.1$WaldScore)
res.1.a <- res.1 %>% select(Marker,Gscore,WaldScore,pvalG,pvalWald) %>% arrange(pvalG)
write.table(x = res.1.a,file = "sambada_results.tsv",quote = F,sep = "\t",row.names = F,col.names = T)
entap <- read.table("../05-ENTAP/final_annotations_lvl3.tsv",sep="\t")
entap
entap <- read.table("../05-ENTAP/final_annotations_lvl3.tsv",sep="\t",skipNul = T)
entap <- read.table("../05-ENTAP/final_annotations_lvl3.tsv",sep="\t",fill = T)
entap
library(vcfR)
View(entap)
vcf <- read.vcfR("../05-SNPEFF/Spurp.minQ20.minGQ20.mac4.miss95.snps.ri.F.ann.vcf")
vcf
vcfR_obj <- read.vcfR("../05-SNPEFF/Spurp.minQ20.minGQ20.mac4.miss95.snps.ri.F.ann.vcf")
vcfR_df <- vcfR2tidy(vcfR_obj)
vcf_df_fix <- vcfR_df$fix %>%
select(chrom_id=CHROM,pos=POS,ANN) %>%
separate(col = ANN,into = c("allele","annotation","annotation_impact","gene_name",
"gene_id","feature_type","feature_id","transcript_biotype",
"rank","HGVS.c","HGVS.p","cDNA.pos/cDNA.length","cDNS.pos/cDNS.length",
"AA.pos/AA.length","distance","err"), sep = "\\|",convert=T,remove=F,fill="right") %>%
select(!(ANN))
vcf_df_fix
View(vcf_df_fix)
vcfR_obj <- read.vcfR("../05-SNPEFF/Spurp.minQ20.minGQ20.mac4.miss95.snps.ri.F.ann.vcf")
vcfR_df <- vcfR2tidy(vcfR_obj)
vcf_df_fix <- vcfR_df$fix %>%
select(chrom_id=CHROM,pos=POS,ANN) %>%
separate(col = ANN,into = c("allele","annotation","annotation_impact","gene_name",
"gene_id","feature_type","feature_id","transcript_biotype",
"rank","HGVS.c","HGVS.p","cDNA.pos/cDNA.length","cDNS.pos/cDNS.length",
"AA.pos/AA.length","distance","err"), sep = "\\|",convert=T,remove=F,fill="right") %>%
select(!(ANN))
View(vcf_df_fix)
vcfR_obj <- read.vcfR("../05-SNPEFF/Spurp.minQ20.minGQ20.mac4.miss95.snps.ri.F.ann.vcf")
vcfR_df <- vcfR2tidy(vcfR_obj)
vcf_df_fix <- vcfR_df$fix %>%
select(chrom_id=CHROM,pos=POS,ANN) %>%
separate(col = ANN,into = c("allele","annotation","annotation_impact","gene_name",
"gene_id","feature_type","feature_id","transcript_biotype",
"rank","HGVS.c","HGVS.p","cDNA.pos/cDNA.length","cDNS.pos/cDNS.length",
"AA.pos/AA.length","distance","err"), sep = "\\|",convert=T,remove=F,fill="right") %>%
select(!(ANN))
View(vcf_df_fix)
rm(list=ls())
